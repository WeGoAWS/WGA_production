AWSTemplateFormatVersion: "2010-09-09"
Description: "WGA - MCP CloudFormation Template"

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    Description: The deployment environment

  DockerBuildBucketName:
    Type: String
    Description: SSM parameter for Docker Build S3 bucket

Resources:
  MCPRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "wga-mcp-${Environment}"
      ImageScanningConfiguration:
        scanOnPush: true

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess

  DockerBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "wga-docker-build-${Environment}"
      RoleArn: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ENV
            Value: !Ref Environment
          - Name: REGION
            Value: !Ref "AWS::Region"
          - Name: ACCOUNT_ID
            Value: !Ref "AWS::AccountId"
          - Name: MCP_ECR_IMAGE_TAG
            Value: "latest"
      Source:
        Type: S3
        Location: !Sub "${DockerBuildBucketName}/docker-build-${Environment}.zip"
      Artifacts:
        Type: NO_ARTIFACTS
      TimeoutInMinutes: 60
      BuildSpec: |
        version: 0.2

        phases:
          install:
            commands:
              - echo "[MCP] 환경확인: ENV=$ENV, REGION=$REGION, ACCOUNT_ID=$ACCOUNT_ID"
          pre_build:
            commands:
              - echo "[MCP] ECR 리포지토리 확인 중: wga-mcp-$ENV"
              - |
                if ! aws ecr describe-repositories --repository-names "wga-mcp-$ENV" > /dev/null 2>&1; then
                  echo "[MCP] ECR 리포지토리 생성 중: wga-mcp-$ENV";
                  aws ecr create-repository --repository-name "wga-mcp-$ENV";
                fi
              - echo "[MCP] Docker 로그인..."
              - aws ecr get-login-password --region $REGION \
                  | docker login --username AWS --password-stdin "$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com"
          build:
            commands:
              - echo "[MCP] Docker 이미지 빌드 중..."
              - docker build --no-cache --platform linux/amd64 \
                  -t "wga-mcp-$ENV:$MCP_ECR_IMAGE_TAG" ./mcp
              - docker tag "wga-mcp-$ENV:$MCP_ECR_IMAGE_TAG" \
                  "$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/wga-mcp-$ENV:$MCP_ECR_IMAGE_TAG"
          post_build:
            commands:
              - echo "[MCP] Docker 이미지 ECR에 푸시 중..."
              - docker push "$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/wga-mcp-$ENV:$MCP_ECR_IMAGE_TAG"
        artifacts:
          files: []
