AWSTemplateFormatVersion: '2010-09-09'
Description: WGA - Athena Query & Table Lambda

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    Description: Deployment environment
  AthenaOutputBucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Description: SSM parameter for Athena query result S3 bucket
    Default: /wga/dev/AthenaOutputBucket

Resources:

  AthenaOutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub wga-gluequery-${Environment}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Environment
          Value: !Ref Environment

  AthenaOutputBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /wga/${Environment}/AthenaOutputBucket
      Type: String
      Value: !Ref AthenaOutputBucket
      Description: S3 bucket for Athena query results

  AthenaUtilityLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub wga-athena-utility-role-${Environment}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
      Policies:
        - PolicyName: !Sub athena-utility-logging-inline-${Environment}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: '*'

  AthenaUtilityLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub wga-athena-utility-${Environment}
      Role: !GetAtt AthenaUtilityLambdaRole.Arn
      Runtime: python3.12
      Handler: enable_guardduty.lambda_handler
      Timeout: 60
      MemorySize: 512
      Environment:
        Variables:
          ATHENA_DB: !Sub wga_logs_${Environment}
          S3_QUERY_OUTPUT: !Ref AthenaOutputBucketName
      Code:
        S3Bucket: !Sub wga-deployment-${Environment}
        S3Key: !Sub lambda/wga-athena-utility-${Environment}.zip

  GuardDutyExportBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub wga-guardduty-${Environment}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Environment
          Value: !Ref Environment

  GuardDutyExportBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /wga/${Environment}/GuardDutyExportBucket
      Type: String
      Value: !Ref GuardDutyExportBucket
      Description: S3 bucket for GuardDuty findings export

  GuardDutyDetector:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub wga-guardduty-detector-init-${Environment}
      Role: !GetAtt AthenaUtilityLambdaRole.Arn
      Runtime: python3.12
      Handler: lambda_function.lambda_handler
      Timeout: 60
      MemorySize: 128
      Environment:
        Variables:
          GUARDDUTY_EXPORT_BUCKET: !Sub wga-guardduty-${Environment}
      Code:
        S3Bucket: !Sub wga-deployment-${Environment}
        S3Key: !Sub lambda/guardduty-init-${Environment}.zip

Outputs:
  AthenaUtilityLambdaArn:
    Description: ARN of the unified Athena utility Lambda
    Value: !GetAtt AthenaUtilityLambda.Arn